# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import sms_pb2 as sms__pb2


class SMSServiceStub(object):
  """Service responsible for sending and managing invite SMS messages.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateGroupInvite = channel.unary_unary(
        '/hackgt6.SMSService/CreateGroupInvite',
        request_serializer=sms__pb2.GroupInvite.SerializeToString,
        response_deserializer=sms__pb2.InviteToken.FromString,
        )


class SMSServiceServicer(object):
  """Service responsible for sending and managing invite SMS messages.
  """

  def CreateGroupInvite(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SMSServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateGroupInvite': grpc.unary_unary_rpc_method_handler(
          servicer.CreateGroupInvite,
          request_deserializer=sms__pb2.GroupInvite.FromString,
          response_serializer=sms__pb2.InviteToken.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'hackgt6.SMSService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
